// Code generated by MockGen. DO NOT EDIT.
// Source: db.go

// Package db is a generated GoMock package.
package db

import (
	context "context"
	reflect "reflect"

	worker "go.temporal.io/sdk/worker"
	gomock "go.uber.org/mock/gomock"
)

// MockDB is a mock of DB interface.
type MockDB struct {
	ctrl     *gomock.Controller
	recorder *MockDBMockRecorder
}

// MockDBMockRecorder is the mock recorder for MockDB.
type MockDBMockRecorder struct {
	mock *MockDB
}

// NewMockDB creates a new mock instance.
func NewMockDB(ctrl *gomock.Controller) *MockDB {
	mock := &MockDB{ctrl: ctrl}
	mock.recorder = &MockDBMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDB) EXPECT() *MockDBMockRecorder {
	return m.recorder
}

// CreateForwardtestActivity mocks base method.
func (m *MockDB) CreateForwardtestActivity(ctx context.Context, params CreateForwardtestActivityParams) (CreateForwardtestActivityResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateForwardtestActivity", ctx, params)
	ret0, _ := ret[0].(CreateForwardtestActivityResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateForwardtestActivity indicates an expected call of CreateForwardtestActivity.
func (mr *MockDBMockRecorder) CreateForwardtestActivity(ctx, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateForwardtestActivity", reflect.TypeOf((*MockDB)(nil).CreateForwardtestActivity), ctx, params)
}

// DeleteForwardtestActivity mocks base method.
func (m *MockDB) DeleteForwardtestActivity(ctx context.Context, params DeleteForwardtestActivityParams) (DeleteForwardtestActivityResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteForwardtestActivity", ctx, params)
	ret0, _ := ret[0].(DeleteForwardtestActivityResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteForwardtestActivity indicates an expected call of DeleteForwardtestActivity.
func (mr *MockDBMockRecorder) DeleteForwardtestActivity(ctx, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteForwardtestActivity", reflect.TypeOf((*MockDB)(nil).DeleteForwardtestActivity), ctx, params)
}

// ListForwardtestsActivity mocks base method.
func (m *MockDB) ListForwardtestsActivity(ctx context.Context, params ListForwardtestsActivityParams) (ListForwardtestsActivityResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListForwardtestsActivity", ctx, params)
	ret0, _ := ret[0].(ListForwardtestsActivityResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListForwardtestsActivity indicates an expected call of ListForwardtestsActivity.
func (mr *MockDBMockRecorder) ListForwardtestsActivity(ctx, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListForwardtestsActivity", reflect.TypeOf((*MockDB)(nil).ListForwardtestsActivity), ctx, params)
}

// ReadForwardtestActivity mocks base method.
func (m *MockDB) ReadForwardtestActivity(ctx context.Context, params ReadForwardtestActivityParams) (ReadForwardtestActivityResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadForwardtestActivity", ctx, params)
	ret0, _ := ret[0].(ReadForwardtestActivityResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadForwardtestActivity indicates an expected call of ReadForwardtestActivity.
func (mr *MockDBMockRecorder) ReadForwardtestActivity(ctx, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadForwardtestActivity", reflect.TypeOf((*MockDB)(nil).ReadForwardtestActivity), ctx, params)
}

// Register mocks base method.
func (m *MockDB) Register(w worker.Worker) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Register", w)
}

// Register indicates an expected call of Register.
func (mr *MockDBMockRecorder) Register(w interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockDB)(nil).Register), w)
}

// UpdateForwardtestActivity mocks base method.
func (m *MockDB) UpdateForwardtestActivity(ctx context.Context, params UpdateForwardtestActivityParams) (UpdateForwardtestActivityResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateForwardtestActivity", ctx, params)
	ret0, _ := ret[0].(UpdateForwardtestActivityResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateForwardtestActivity indicates an expected call of UpdateForwardtestActivity.
func (mr *MockDBMockRecorder) UpdateForwardtestActivity(ctx, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateForwardtestActivity", reflect.TypeOf((*MockDB)(nil).UpdateForwardtestActivity), ctx, params)
}
