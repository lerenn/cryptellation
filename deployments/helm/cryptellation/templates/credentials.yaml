apiVersion: v1
kind: ConfigMap
metadata:
    name: cryptellation-credentials
data:
    # Exchanges
    binance.api_key: "{{ (.Values.credentials).exchanges.binance.api_key }}"
    binance.secret_key: "{{ (.Values.credentials).exchanges.binance.secret_key }}"
    
    # Temporal
    {{ $DEFAULT_TEMPORAL_ADDRESS := (print "cryptellation-temporal-frontend." .Release.Namespace ".svc.cluster.local:7233") }}
    temporal.address: "{{ ((.Values.credentials).temporal).address | default $DEFAULT_TEMPORAL_ADDRESS }}"

    # Datastores
    {{ $SQL_DATABASE := (((.Values.credentials).datastores).sql).database | default "cryptellation" }}
    {{ $DEFAULT_SQL_HOST := (print .Release.Name "-cockroachdb-public." .Release.Namespace ".svc.cluster.local") }}
    {{ $SQL_HOST := (((.Values.credentials).datastores).sql).host | default $DEFAULT_SQL_HOST }}
    {{ $SQL_PORT := (((.Values.credentials).datastores).sql).port | default 26257 }}
    {{ $SQL_USER := (((.Values.credentials).datastores).sql).user | default "cryptellation" }}
    {{ $SQL_PASSWORD := (((.Values.credentials).datastores).sql).password | default "cryptellation" }}
    sql.dsn: "host={{ $SQL_HOST }} port={{ $SQL_PORT }} user={{ $SQL_USER }} password={{ $SQL_PASSWORD }} dbname={{ $SQL_DATABASE }} sslmode=disable"

    # Opentelemetry
    opentelemetry.grpc.endpoint: "{{ ((.Values.credentials).opentelemetry).grpc.endpoint }}"
