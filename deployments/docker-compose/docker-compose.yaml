services:
  postgresql:
    image: postgres:17.4-alpine
    restart: always
    shm_size: 128mb
    ports:
      - 7000:5432
    expose:
      - 5432
    volumes:
      - ./postgresql:/docker-entrypoint-initdb.d/
    environment:
      POSTGRES_PASSWORD: cryptellation
    networks:
      - cryptellation

  temporal:
    depends_on:
      - postgresql
    environment:
      - DB=postgres12
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
    image: temporalio/auto-setup:1.25
    ports:
      - 7001:7233
    expose:
      - 7233
    volumes:
      - ./temporal:/etc/temporal/config/dynamicconfig
    networks:
      - cryptellation
  temporal-ui:
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    image: temporalio/ui:2.31.2
    ports:
      - 7002:8080
    expose:
      - 8080
    networks:
      - cryptellation

  migrator:
    depends_on:
      - postgresql
    image: golang:1.24-alpine
    command: ["go", "run", "./cmd/worker", "database", "migrate"]
    working_dir: /go/src/github.com/lerenn/cryptellation/v1
    environment:
      LOG_DEV_MODE: true
      LOG_LEVEL: DEBUG
      SQL_DSN: "host=postgresql user=cryptellation password=cryptellation dbname=cryptellation sslmode=disable"
    volumes:
      - gocache:/go/pkg/mod
      - gobuild:/root/.cache/go-build
      - ../..:/go/src/github.com/lerenn/cryptellation/v1
    networks:
      - cryptellation
  gateway:
    profiles: ["gateway", "ui"]
    image: cosmtrek/air
    depends_on:
      - temporal
    working_dir: /go/src/github.com/lerenn/cryptellation/v1
    environment:
      LOG_DEV_MODE: true
      LOG_LEVEL: DEBUG
      HEALTH_PORT: 9000
      TEMPORAL_ADDRESS: temporal:7233
    command: ["-c", "deployments/docker-compose/gateway/.air.toml"]
    volumes:
      - gocache:/go/pkg/mod
      - gobuild:/root/.cache/go-build
      - ../..:/go/src/github.com/lerenn/cryptellation/v1
    ports:
      - 7003:8080
    expose:
      - 8080
    networks:
      - cryptellation
  ui:
    profiles: ["ui"]
    image: node:alpine
    depends_on:
      - gateway
    working_dir: /web/ui
    command: ["sh", "-c", "npm install && npm start"]
    volumes:
      - node_modules:/web/ui/node_modules
      - ../../web/ui:/web/ui
    ports:
      - 3000:3000
    expose:
      - 3000
    networks:
      - cryptellation
  worker:
    profiles: ["worker"]
    image: cosmtrek/air
    depends_on:
      - temporal
      - postgresql
    working_dir: /go/src/github.com/lerenn/cryptellation/v1
    environment:
      LOG_DEV_MODE: true
      LOG_LEVEL: DEBUG
      HEALTH_PORT: 9000
      SQL_DSN: "host=postgresql user=cryptellation password=cryptellation dbname=cryptellation sslmode=disable"
      TEMPORAL_ADDRESS: temporal:7233
    env_file:
      - path: ../../.credentials.env
        required: true
    command: ["-c", "deployments/docker-compose/worker/.air.toml"]
    volumes:
      - gocache:/go/pkg/mod
      - gobuild:/root/.cache/go-build
      - ../..:/go/src/github.com/lerenn/cryptellation/v1
    networks:
      - cryptellation

volumes:
  gocache:
  gobuild:
  node_modules:

networks:
  cryptellation:
